import{_ as d,o as c,c as l,a as e,b as a,w as t,e as i,d as o,r}from"./app.f10a4800.js";const h={},u=i('<h1 id="code-contributing" tabindex="-1"><a class="header-anchor" href="#code-contributing" aria-hidden="true">#</a> Code Contributing</h1><p>PolarDB for PostgreSQL is an open source product from PostgreSQL and other open source projects. Our main target is to create a larger community for PostgreSQL. Contributors are welcomed to submit their code and ideas. In a long run, we hope this project can be managed by developers from both inside and outside Alibaba.</p><h2 id="branch-description-and-management" tabindex="-1"><a class="header-anchor" href="#branch-description-and-management" aria-hidden="true">#</a> Branch Description and Management</h2><ul><li><code>POLARDB_11_STABLE</code> is the stable branch of PolarDB, it can accept the merge from <code>POLARDB_11_DEV</code> only</li><li><code>POLARDB_11_DEV</code> is the stable development branch of PolarDB, it can accept the merge from both pull requests and direct pushes from maintainers</li></ul><p>New features will be merged to <code>POLARDB_11_DEV</code>, and will be merged to <code>POLARDB_11_STABLE</code> periodically by maintainers</p><h2 id="before-contributing" tabindex="-1"><a class="header-anchor" href="#before-contributing" aria-hidden="true">#</a> Before Contributing</h2>',6),p=o("Read and follow our "),m=o("Code of Conduct"),b=o("."),g=o("Sign the "),_={href:"https://gist.github.com/alibaba-oss/151a13b0a72e44ba471119c7eb737d74",target:"_blank",rel:"noopener noreferrer"},f=o("CLA"),v=o(" of PolarDB for PostgreSQL"),k=e("h2",{id:"contributing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contributing","aria-hidden":"true"},"#"),o(" Contributing")],-1),y=e("p",null,"Here is a checklist to prepare and submit your PR (pull request):",-1),P=e("li",null,[o("Create your own Github repository copy by forking "),e("code",null,"ApsaraDB/PolarDB-for-PostgreSQL"),o(".")],-1),D=o("Checkout documentations for "),B=o("Advanced Deployment"),L=o(" from PolarDB source code."),x=o("Push changes to your personal fork and make sure they follow our "),w=o("coding style"),C=o("."),R=e("li",null,"Create a PR with a detailed description, if commit messages do not express themselves.",-1),A=e("li",null,"Submit PR for review and address all feedbacks.",-1),S=e("li",null,"Wait for merging",-1),E=e("h2",{id:"an-example-of-submitting-code-change-to-polardb",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#an-example-of-submitting-code-change-to-polardb","aria-hidden":"true"},"#"),o(" An Example of Submitting Code Change to PolarDB")],-1),O=e("p",null,"Let's use an example to walk through the list.",-1),V=e("h3",{id:"fork-your-own-repository",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fork-your-own-repository","aria-hidden":"true"},"#"),o(" Fork Your Own Repository")],-1),Q=o("On GitHub repository of "),q={href:"https://github.com/ApsaraDB/PolarDB-for-PostgreSQL",target:"_blank",rel:"noopener noreferrer"},N=o("PolarDB for PostgreSQL"),T=o(", Click "),I=e("strong",null,"fork",-1),G=o(" button to create your own PolarDB repository."),H=i(`<h3 id="create-local-repository" tabindex="-1"><a class="header-anchor" href="#create-local-repository" aria-hidden="true">#</a> Create Local Repository</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/<span class="token operator">&lt;</span>your-github<span class="token operator">&gt;</span>/PolarDB-for-PostgreSQL.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="create-a-local-development-branch" tabindex="-1"><a class="header-anchor" href="#create-a-local-development-branch" aria-hidden="true">#</a> Create a Local Development Branch</h3><p>Check out a new development branch from the stable development branch <code>POLARDB_11_DEV</code>. Suppose your branch is named as <code>dev</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> checkout POLARDB_11_DEV
<span class="token function">git</span> checkout -b dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="make-changes-and-commit-locally" tabindex="-1"><a class="header-anchor" href="#make-changes-and-commit-locally" aria-hidden="true">#</a> Make Changes and Commit Locally</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> status
<span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>files-to-change<span class="token operator">&gt;</span>
<span class="token function">git</span> commit -m <span class="token string">&quot;modification for dev&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rebase-and-commit-to-remote-repository" tabindex="-1"><a class="header-anchor" href="#rebase-and-commit-to-remote-repository" aria-hidden="true">#</a> Rebase and Commit to Remote Repository</h3><p>Click <code>Fetch upstream</code> on your own repository page to make sure your stable development branch is up do date with PolarDB official. Then pull the latest commits on stable development branch to your local repository.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> checkout POLARDB_11_DEV
<span class="token function">git</span> pull
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Then, rebase your development branch to the stable development branch, and resolve the conflict:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> checkout dev
<span class="token function">git</span> rebase POLARDB_11_DEV
-- resolve conflict --
<span class="token function">git</span> push -f dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-a-pull-request" tabindex="-1"><a class="header-anchor" href="#create-a-pull-request" aria-hidden="true">#</a> Create a Pull Request</h3><p>Click <strong>New pull request</strong> or <strong>Compare &amp; pull request</strong> button, choose to compare branches <code>ApsaraDB/PolarDB-for-PostgreSQL:POLARDB_11_DEV</code> and <code>&lt;your-github&gt;/PolarDB-for-PostgreSQL:dev</code>, and write PR description.</p><p>GitHub will automatically run regression test on your code. Your PR should pass all these checks.</p><h3 id="address-reviewers-comments" tabindex="-1"><a class="header-anchor" href="#address-reviewers-comments" aria-hidden="true">#</a> Address Reviewers&#39; Comments</h3><p>Resolve all problems raised by reviewers and update the PR.</p><h3 id="merge" tabindex="-1"><a class="header-anchor" href="#merge" aria-hidden="true">#</a> Merge</h3><p>It is done by PolarDB maintainers.</p>`,19);function M(j,F){const n=r("RouterLink"),s=r("ExternalLinkIcon");return c(),l("div",null,[u,e("ul",null,[e("li",null,[p,a(n,{to:"/contributing/code-of-conduct.html"},{default:t(()=>[m]),_:1}),b]),e("li",null,[g,e("a",_,[f,a(s)]),v])]),k,y,e("ul",null,[P,e("li",null,[D,a(n,{to:"/deploying/deploy.html"},{default:t(()=>[B]),_:1}),L]),e("li",null,[x,a(n,{to:"/contributing/coding-style.html"},{default:t(()=>[w]),_:1}),C]),R,A,S]),E,O,V,e("p",null,[Q,e("a",q,[N,a(s)]),T,I,G]),H])}var K=d(h,[["render",M],["__file","contributing-polardb-kernel.html.vue"]]);export{K as default};
